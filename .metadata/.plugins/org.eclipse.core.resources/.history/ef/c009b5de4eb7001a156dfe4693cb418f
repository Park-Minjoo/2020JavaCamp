import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Vector;

public class LineDrawEx extends JFrame {
    int option = LINE;
    public static final int LINE = 1;
    public static final int RECT = 2;
    
	public LineDrawEx(){
		setContentPane(new MyPanel());
		setSize(900, 600);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		getContentPane().setLayout(null);
		setVisible(true);
		
		JToolBar toolBar = new JToolBar();
		toolBar.setBounds(0, 0, 900, 68);
		getContentPane().add(toolBar);
		
		JButton Line = new JButton("Line");
		toolBar.add(Line);
		
		JButton Rect = new JButton("Rectangulat");
		toolBar.add(Rect);
		Line.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				option = LINE;
			}
		});
		setVisible(true);
	}
	
	class MyPanel extends JPanel{
		Point startP = null;
		Point endP = null;
		
		Vector<Point> sv = new Vector<Point>(); // 시작
		Vector<Point> se = new Vector<Point>(); // 끝점
		
		public MyPanel(){
			MyMouseListener ml = new MyMouseListener();
			
			this.addMouseListener(new MyMouseListener()); // 리스너
		}
		
		public void paintComponent(Graphics g){
			super.paintComponent(g); // 부모 페인트호출
			
			if(option == LINE) {
				if(sv.size() == 0) // 벡터에 암것도없으면 리턴
					return;
				
				for(int i=0;i<sv.size();i++){ //벡터크기만큼
					Point sp = sv.get(i); // 벡터값을꺼내다
					Point ep = se.get(i);	
					g.drawLine(sp.x, sp.y, ep.x, ep.y);//그리다
					}
				if(startP != null)
					g.drawLine(startP.x, startP.y, endP.x, endP.y);		
			}
			if(option == RECT) {
				
			}
		}
		
		class MyMouseListener extends MouseAdapter{
			public void mousePressed(MouseEvent e){
				startP = e.getPoint();
				sv.add(e.getPoint()); // 클릭한부분을 시작점으로
			}
			public void mouseReleased(MouseEvent e){
				se.add(e.getPoint()); // 드래그 한부분을 종료점으로
				endP = e.getPoint();
				repaint(); // 다시그려라
			}
		}
	}
	
	public static void main(String[] args) {
		new LineDrawEx();
	}
}
